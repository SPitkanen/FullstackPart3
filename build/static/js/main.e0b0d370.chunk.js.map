{"version":3,"sources":["services/persons.js","App.js","index.js"],"names":["baseUrl","axios","get","then","response","data","newObject","post","id","put","delete","Notification","message","className","Person","person","action","name","number","onClick","ShowPersons","props","persons","filter","toLowerCase","includes","map","Filter","value","onChange","change","AddPerson","onSubmit","addPerson","handleName","handleNumber","type","App","useState","setPersons","newName","setNewName","newNumber","setNewNumber","newFilter","setNewFilter","setMessage","useEffect","personService","initialPersons","timeout","setTimeout","event","console","log","target","preventDefault","personObject","show","some","find","window","confirm","returnedPerson","catch","error","concat","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mNACMA,EAAU,eAsBC,EApBF,WAEX,OADgBC,IAAMC,IAAIF,GACXG,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SAkB5B,EAfA,SAAAC,GAEb,OADgBL,IAAMM,KAAKP,EAASM,GACrBH,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SAa5B,EAVA,SAACG,EAAIF,GAElB,OADgBL,IAAMQ,IAAN,UAAaT,EAAb,YAAwBQ,GAAMF,GAC/BH,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SAQ5B,EALA,SAACG,GAEd,OADgBP,IAAMS,OAAN,UAAgBV,EAAhB,YAA2BQ,IAC5BL,MAAK,SAAAC,GAAQ,OAAIA,EAASC,S,OCjBvCM,EAAe,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACtB,OAAgB,OAAZA,EACK,KAIP,qBAAKC,UAAU,QAAf,SACGD,KAKDE,EAAS,SAAC,GAAwB,IAAtBC,EAAqB,EAArBA,OAAQC,EAAa,EAAbA,OACxB,OACE,gCACE,8BAAID,EAAOE,KAAX,KAAmBF,EAAOG,UAAW,wBAAQC,QAAS,kBAAMH,EAAOD,IAA9B,wBAKrCK,EAAc,SAACC,GACnB,OACE,8BACGA,EAAMC,QAAQC,QAAO,SAAAR,GAAM,OAAIA,EAAOE,KAAKO,cAAcC,SAASJ,EAAME,OAAOC,gBAAkBT,EAAOG,OAAOO,SAASJ,EAAME,OAAOC,kBAAgBE,KAAI,SAAAX,GAAM,OAAI,cAAC,EAAD,CAA0BA,OAAQA,EAAQC,OAAQK,EAAML,QAA3CD,EAAOE,YAKxLU,EAAS,SAACN,GACd,OACE,8BACE,+BACE,+CAAiB,uBAAOO,MAAOP,EAAME,OAAQM,SAAUR,EAAMS,iBAM/DC,EAAY,SAACV,GACjB,OACE,8BACE,uBAAMW,SAAUX,EAAMY,UAAtB,UACE,yCAAW,uBAAOL,MAAOP,EAAMJ,KAAMY,SAAUR,EAAMa,gBACrD,2CAAa,uBAAON,MAAOP,EAAMH,OAAQW,SAAUR,EAAMc,kBACzD,8BACE,wBAAQC,KAAK,SAAb,yBAmHKC,EA5GH,WACV,MAA+BC,mBAAS,IAAxC,mBAAQhB,EAAR,KAAiBiB,EAAjB,KACA,EAAgCD,mBAAS,IAAzC,mBAAQE,EAAR,KAAiBC,EAAjB,KACA,EAAoCH,mBAAS,IAA7C,mBAAQI,EAAR,KAAmBC,EAAnB,KACA,EAAoCL,mBAAS,IAA7C,mBAAQM,EAAR,KAAmBC,EAAnB,KACA,EAA8BP,mBAAS,MAAvC,mBAAO1B,EAAP,KAAgBkC,EAAhB,KAEAC,qBAAU,WACRC,IAEK7C,MAAK,SAAA8C,GACJV,EAAWU,QAEhB,IAEH,IAAMC,EAAU,WACdC,YAAW,WACTL,EAAW,QACV,MA4EL,OACE,gCACE,2CACA,cAAC,EAAD,CAAclC,QAASA,IACvB,cAAC,EAAD,CAAQW,OAAQqB,EAAWd,OATJ,SAACsB,GAC1BC,QAAQC,IAAIF,EAAMG,OAAO3B,OACzBiB,EAAaO,EAAMG,OAAO3B,UAQxB,yCACA,cAAC,EAAD,CAAWK,UAhFG,SAACmB,GACjBA,EAAMI,iBACN,IAAMC,EAAe,CACnBxC,KAAMuB,EACNtB,OAAQwB,EACRgB,MAAM,GAER,GAAIpC,EAAQqC,MAAK,SAAA5C,GAAM,OAAIA,EAAOE,OAASuB,KAAU,CACnD,IAAMhC,EAAKc,EAAQsC,MAAK,SAAA7C,GAAM,OAAIA,EAAOE,OAASuB,KAAShC,GAC3D6C,QAAQC,IAAI9C,GACRqD,OAAOC,QAAP,UAAkBtB,EAAlB,6DACFQ,EACQxC,EAAIiD,GACTtD,MAAK,SAAA4D,GACJxB,EAAWjB,EAAQI,KAAI,SAAAX,GAAM,OAAIA,EAAOP,KAAOA,EAAKO,EAASgD,MAC7DjB,EAAW,GAAD,OAAIN,EAAJ,+BACVU,OAEHc,OAAM,SAAAC,GACLnB,EAAW,gBAAD,OACQN,EADR,sBAGVD,EAAWjB,EAAQC,QAAO,SAAAR,GAAM,OAAIA,EAAOP,KAAOA,MAClD0C,OAGJT,EAAW,IACXE,EAAa,SAEbK,EACUS,GACLtD,MAAK,SAAA4D,GACJxB,EAAWjB,EAAQ4C,OAAOH,OAEhCjB,EAAW,GAAD,OAAIN,EAAJ,6BACVU,IACAT,EAAW,IACXE,EAAa,KA2CoB1B,KAAMuB,EAASN,WArB3B,SAACkB,GACxBC,QAAQC,IAAIF,EAAMG,OAAO3B,OACzBa,EAAWW,EAAMG,OAAO3B,QAmBwDV,OAAQwB,EAAWP,aAhB1E,SAACiB,GAC1BC,QAAQC,IAAIF,EAAMG,OAAO3B,OACzBe,EAAaS,EAAMG,OAAO3B,UAexB,yCACA,cAAC,EAAD,CAAaN,QAASA,EAASC,OAAQqB,EAAW5B,OAzCjC,SAACD,GACpB,GAAI8C,OAAOC,QAAP,iDAAyD/C,EAAOE,KAAhE,MAA0E,CAC5E+B,EACUjC,EAAOP,IACZL,MAAK,kBAAM,KACb6D,OAAM,SAAAC,GACLnB,EAAW,gBAAD,OACQ/B,EAAOE,KADf,sBAGViC,OAEJ,IAAM1C,EAAKO,EAAOP,GAClB+B,EAAWjB,EAAQC,QAAO,SAAAR,GAAM,OAAIA,EAAOP,KAAOA,MAClDsC,EAAW,GAAD,OAAI/B,EAAOE,KAAX,4BACViC,YC5HNiB,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.e0b0d370.chunk.js","sourcesContent":["import axios from 'axios'\nconst baseUrl = '/api/persons'\n\nconst getAll = () => {\n    const request = axios.get(baseUrl)\n    return request.then(response => response.data)\n  }\n  \n  const create = newObject => {\n    const request = axios.post(baseUrl, newObject)\n    return request.then(response => response.data)\n  }\n  \n  const update = (id, newObject) => {\n    const request = axios.put(`${baseUrl}/${id}`, newObject)\n    return request.then(response => response.data)\n  }\n\n  const remove = (id) => {\n    const request = axios.delete(`${baseUrl}/${id}`)\n    return request.then(response => response.data)\n  }\n  \n  export default { \n    getAll: getAll, \n    create: create, \n    update: update,\n    remove: remove\n  }","import React, { useState, useEffect } from 'react'\nimport personService from './services/persons'\n\nconst Notification = ({ message }) => {\n  if (message === null) {\n    return null\n  }\n\n  return (\n    <div className=\"error\">\n      {message}\n    </div>\n  )\n}\n\nconst Person = ({ person, action }) => {\n  return (\n    <div>\n      <p>{person.name}, {person.number}</p><button onClick={() => action(person)}>Remove</button>\n    </div>\n  )\n}\n\nconst ShowPersons = (props) => {\n  return (\n    <div>\n      {props.persons.filter(person => person.name.toLowerCase().includes(props.filter.toLowerCase()) || person.number.includes(props.filter.toLowerCase())).map(person => <Person key={person.name} person={person} action={props.action} />)}\n    </div>\n  )\n}\n\nconst Filter = (props) => {\n  return (\n    <div>\n      <form>\n        <div>Filter with <input value={props.filter} onChange={props.change}/></div>\n      </form>\n    </div>\n  )\n}\n\nconst AddPerson = (props) => {\n  return (\n    <div>\n      <form onSubmit={props.addPerson}>\n        <div>Name: <input value={props.name} onChange={props.handleName}/></div>\n        <div>Number: <input value={props.number} onChange={props.handleNumber}/></div>\n        <div>\n          <button type=\"submit\">Add</button>\n        </div>\n      </form>\n    </div>\n  )\n}\n\nconst App = () => {\n  const [ persons, setPersons] = useState([]) \n  const [ newName, setNewName ] = useState('')\n  const [ newNumber, setNewNumber ] = useState('')\n  const [ newFilter, setNewFilter ] = useState('')\n  const [message, setMessage] = useState(null)\n\n  useEffect(() => {\n    personService\n      .getAll()\n        .then(initialPersons => {\n          setPersons(initialPersons)\n        })\n  }, [])\n\n  const timeout = () => {\n    setTimeout(() => {\n      setMessage(null)\n    }, 5000)\n  }\n  const addPerson = (event) => {\n    event.preventDefault()\n    const personObject = {\n      name: newName,\n      number: newNumber,\n      show: true\n    }\n    if (persons.some(person => person.name === newName)) {\n      const id = persons.find(person => person.name === newName).id\n      console.log(id)\n      if (window.confirm(`${newName} is already in phonebook, Do you want to update number?`)) {\n        personService\n        .update(id, personObject)\n          .then(returnedPerson => {\n            setPersons(persons.map(person => person.id !== id ? person : returnedPerson))\n            setMessage(`${newName} yhteystieto päivitetty`)\n            timeout()\n          })\n        .catch(error => {\n          setMessage(\n            `Yhteystieto '${newName}' on jo poistettu`\n          )\n          setPersons(persons.filter(person => person.id !== id))\n          timeout()\n        })\n      }\n      setNewName('')\n      setNewNumber('')\n    } else {\n      personService\n        .create(personObject)\n          .then(returnedPerson => {\n            setPersons(persons.concat(returnedPerson))\n          })\n      setMessage(`${newName} yhteystiedot lisätty`)\n      timeout()\n      setNewName('')\n      setNewNumber('')\n    }\n  }\n\n  const removePerson = (person) => {\n    if (window.confirm(`Haluatko varmasti poistaa yhteystiedon ${person.name}?`)) {\n      personService\n        .remove(person.id)\n          .then(() => true)\n        .catch(error => {\n          setMessage(\n            `Yhteystieto '${person.name}' on jo poistettu`\n          )\n          timeout()\n        })\n      const id = person.id\n      setPersons(persons.filter(person => person.id !== id))\n      setMessage(`${person.name} yhteystiedot poistettu`)\n      timeout()\n    }\n  }\n\n  const handleNameChange = (event) => {\n    console.log(event.target.value)\n    setNewName(event.target.value)\n  }\n\n  const handleNumberChange = (event) => {\n    console.log(event.target.value)\n    setNewNumber(event.target.value)\n  }\n\n  const handleFilterChange = (event) => {\n    console.log(event.target.value)\n    setNewFilter(event.target.value)\n  }\n\n  return (\n    <div>\n      <h1>Phonebook</h1>\n      <Notification message={message} />\n      <Filter filter={newFilter} change={handleFilterChange} />\n      <h2>Add new</h2>\n      <AddPerson addPerson={addPerson} name={newName} handleName={handleNameChange} number={newNumber} handleNumber={handleNumberChange} />\n      <h2>Numbers</h2>\n      <ShowPersons persons={persons} filter={newFilter} action={removePerson} />\n    </div>\n  )\n\n}\n\nexport default App\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}